"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const common_1 = require("@jnxplus/common");
const devkit_1 = require("@nx/devkit");
const executor_1 = require("./boot/executor");
const executor_2 = require("./micronaut/executor");
function runExecutor(options, context) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        devkit_1.logger.info(`Executor ran for Build Image: ${JSON.stringify(options)}`);
        if ((0, common_1.getPluginName)(context) === '@jnxplus/nx-boot-gradle' ||
            options.framework === 'spring-boot') {
            return yield (0, executor_1.default)(options, context);
        }
        if ((0, common_1.getPluginName)(context) === '@jnxplus/nx-quarkus-gradle' ||
            options.framework === 'quarkus') {
            return yield (0, common_1.runQuarkusBuildImageExecutor)(options, context);
        }
        if ((0, common_1.getPluginName)(context) === '@jnxplus/nx-micronaut-gradle' ||
            options.framework === 'micronaut') {
            return yield (0, executor_2.default)(options, context);
        }
        throw new Error('Unhandled options');
    });
}
exports.default = runExecutor;
//# sourceMappingURL=executor.js.map