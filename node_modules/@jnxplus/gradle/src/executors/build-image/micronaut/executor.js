"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const _1 = require("../../../.");
const common_1 = require("@jnxplus/common");
function runMicronautBuildImageExecutor(options, context) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        if (options.useDocker && options.native && options.optimized) {
            return (0, common_1.runCommand)(`${(0, _1.getExecutable)()} ${(0, _1.getProjectPath)(context)}:optimizedDockerBuildNative`);
        }
        if (options.useDocker && !options.native && options.optimized) {
            return (0, common_1.runCommand)(`${(0, _1.getExecutable)()} ${(0, _1.getProjectPath)(context)}:optimizedDockerBuild`);
        }
        if (options.useDocker && options.native && !options.optimized) {
            return (0, common_1.runCommand)(`${(0, _1.getExecutable)()} ${(0, _1.getProjectPath)(context)}:dockerBuildNative`);
        }
        if (options.useDocker && !options.native && !options.optimized) {
            return (0, common_1.runCommand)(`${(0, _1.getExecutable)()} ${(0, _1.getProjectPath)(context)}:dockerBuild`);
        }
        if (!options.useDocker) {
            return (0, common_1.runCommand)(`${(0, _1.getExecutable)()} ${(0, _1.getProjectPath)(context)}:nativeCompile`);
        }
        throw new Error(`Case not handled`);
    });
}
exports.default = runMicronautBuildImageExecutor;
//# sourceMappingURL=executor.js.map