"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPmdExecutable = exports.runCommand = exports.waitForever = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nx/devkit");
const child_process_1 = require("child_process");
function waitForever() {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return new Promise(() => {
            // wait forever
        });
    });
}
exports.waitForever = waitForever;
function runCommand(command, workDir = devkit_1.workspaceRoot) {
    const isVerbose = process.env['NX_VERBOSE_LOGGING'] === 'true';
    try {
        if (isVerbose) {
            devkit_1.logger.debug(`Running command: ${command} from: ${workDir}`);
        }
        (0, child_process_1.execSync)(command, {
            cwd: workDir,
            stdio: 'inherit',
            env: process.env,
            encoding: 'utf-8',
        });
        return { success: true };
    }
    catch (e) {
        if (isVerbose) {
            devkit_1.logger.error(`Failed to execute command: ${command}`);
            devkit_1.logger.error(e);
        }
        return { success: false };
    }
}
exports.runCommand = runCommand;
function getPmdExecutable() {
    const isWin = process.platform === 'win32';
    return isWin ? 'pmd.bat' : 'pmd';
}
exports.getPmdExecutable = getPmdExecutable;
//# sourceMappingURL=index.js.map